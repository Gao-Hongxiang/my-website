"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1019],{3905:(e,n,t)=>{t.d(n,{Zo:()=>o,kt:()=>k});var r=t(7294);function l(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function u(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?u(Object(t),!0).forEach((function(n){l(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):u(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,l=function(e,n){if(null==e)return{};var t,r,l={},u=Object.keys(e);for(r=0;r<u.length;r++)t=u[r],n.indexOf(t)>=0||(l[t]=e[t]);return l}(e,n);if(Object.getOwnPropertySymbols){var u=Object.getOwnPropertySymbols(e);for(r=0;r<u.length;r++)t=u[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var m=r.createContext({}),s=function(e){var n=r.useContext(m),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},o=function(e){var n=s(e.components);return r.createElement(m.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},c=r.forwardRef((function(e,n){var t=e.components,l=e.mdxType,u=e.originalType,m=e.parentName,o=i(e,["components","mdxType","originalType","parentName"]),c=s(t),k=l,d=c["".concat(m,".").concat(k)]||c[k]||p[k]||u;return t?r.createElement(d,a(a({ref:n},o),{},{components:t})):r.createElement(d,a({ref:n},o))}));function k(e,n){var t=arguments,l=n&&n.mdxType;if("string"==typeof e||l){var u=t.length,a=new Array(u);a[0]=c;var i={};for(var m in n)hasOwnProperty.call(n,m)&&(i[m]=n[m]);i.originalType=e,i.mdxType="string"==typeof e?e:l,a[1]=i;for(var s=2;s<u;s++)a[s]=t[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}c.displayName="MDXCreateElement"},3504:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>m,contentTitle:()=>a,default:()=>p,frontMatter:()=>u,metadata:()=>i,toc:()=>s});var r=t(7462),l=(t(7294),t(3905));const u={title:"2. \u4e09\u6570\u4e4b\u548c-15",description:"\u8003\u5bdf\u53cc\u6307\u9488",last_update:{date:"11/15/2022",author:"\u9ad8\u7ea2\u7fd4"}},a=void 0,i={unversionedId:"\u53cc\u6307\u9488/threeSum",id:"\u53cc\u6307\u9488/threeSum",title:"2. \u4e09\u6570\u4e4b\u548c-15",description:"\u8003\u5bdf\u53cc\u6307\u9488",source:"@site/leetcode/06-\u53cc\u6307\u9488/02-threeSum.md",sourceDirName:"06-\u53cc\u6307\u9488",slug:"/\u53cc\u6307\u9488/threeSum",permalink:"/website/leetcode/\u53cc\u6307\u9488/threeSum",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"2. \u4e09\u6570\u4e4b\u548c-15",description:"\u8003\u5bdf\u53cc\u6307\u9488",last_update:{date:"11/15/2022",author:"\u9ad8\u7ea2\u7fd4"}},sidebar:"tutorialSidebar",previous:{title:"1. \u6700\u63a5\u8fd1\u7684\u4e09\u6570\u4e4b\u548c-16",permalink:"/website/leetcode/\u53cc\u6307\u9488/threeSumClosest"},next:{title:"3. \u5220\u9664\u6709\u5e8f\u6570\u7ec4\u4e2d\u7684\u91cd\u590d\u9879--26",permalink:"/website/leetcode/\u53cc\u6307\u9488/deleteArray"}},m={},s=[{value:"\ud83e\udde0 \u89e3\u9898\u601d\u8def",id:"-\u89e3\u9898\u601d\u8def",level:2},{value:"\u7b97\u6cd5\u6d41\u7a0b",id:"\u7b97\u6cd5\u6d41\u7a0b",level:3}],o={toc:s};function p(e){let{components:n,...t}=e;return(0,l.kt)("wrapper",(0,r.Z)({},o,t,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"\u7ed9\u4f60\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 ",(0,l.kt)("inlineCode",{parentName:"p"},"nums")," \uff0c\u5224\u65ad\u662f\u5426\u5b58\u5728\u4e09\u5143\u7ec4 ",(0,l.kt)("inlineCode",{parentName:"p"},"[nums[i], nums[j], nums[k]]")," \u6ee1\u8db3 ",(0,l.kt)("inlineCode",{parentName:"p"},"i != j"),"\u3001",(0,l.kt)("inlineCode",{parentName:"p"},"i != k")," \u4e14 ",(0,l.kt)("inlineCode",{parentName:"p"},"j != k")," \uff0c\u540c\u65f6\u8fd8\u6ee1\u8db3 ",(0,l.kt)("inlineCode",{parentName:"p"},"nums[i] + nums[j] + nums[k] == 0")," \u3002\u8bf7"),(0,l.kt)("p",null,"\u4f60\u8fd4\u56de\u6240\u6709\u548c\u4e3a ",(0,l.kt)("inlineCode",{parentName:"p"},"0")," \u4e14\u4e0d\u91cd\u590d\u7684\u4e09\u5143\u7ec4\u3002"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"\u6ce8\u610f\uff1a"),"\u7b54\u6848\u4e2d\u4e0d\u53ef\u4ee5\u5305\u542b\u91cd\u590d\u7684\u4e09\u5143\u7ec4\u3002"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"\u793a\u4f8b 1\uff1a")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"\u8f93\u5165\uff1anums = [-1,0,1,2,-1,-4]\n\u8f93\u51fa\uff1a[[-1,-1,2],[-1,0,1]]\n\u89e3\u91ca\uff1a\nnums[0] + nums[1] + nums[2] = (-1) + 0 + 1 = 0 \u3002\nnums[1] + nums[2] + nums[4] = 0 + 1 + (-1) = 0 \u3002\nnums[0] + nums[3] + nums[4] = (-1) + 2 + (-1) = 0 \u3002\n\u4e0d\u540c\u7684\u4e09\u5143\u7ec4\u662f [-1,0,1] \u548c [-1,-1,2] \u3002\n\u6ce8\u610f\uff0c\u8f93\u51fa\u7684\u987a\u5e8f\u548c\u4e09\u5143\u7ec4\u7684\u987a\u5e8f\u5e76\u4e0d\u91cd\u8981\u3002\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"\u793a\u4f8b 2\uff1a")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"\u8f93\u5165\uff1anums = [0,1,1]\n\u8f93\u51fa\uff1a[]\n\u89e3\u91ca\uff1a\u552f\u4e00\u53ef\u80fd\u7684\u4e09\u5143\u7ec4\u548c\u4e0d\u4e3a 0 \u3002\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"\u793a\u4f8b 3\uff1a")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"\u8f93\u5165\uff1anums = [0,0,0]\n\u8f93\u51fa\uff1a[[0,0,0]]\n\u89e3\u91ca\uff1a\u552f\u4e00\u53ef\u80fd\u7684\u4e09\u5143\u7ec4\u548c\u4e3a 0 \u3002\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"\u63d0\u793a\uff1a")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"3 <= nums.length <= 3000")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"-105 <= nums[i] <= 105"))),(0,l.kt)("p",null,"\u6765\u6e90\uff1a\u529b\u6263\uff08LeetCode\uff09\n\u94fe\u63a5\uff1a",(0,l.kt)("a",{parentName:"p",href:"https://leetcode.cn/problems/3sum/"},"https://leetcode.cn/problems/3sum/")),(0,l.kt)("h2",{id:"-\u89e3\u9898\u601d\u8def"},"\ud83e\udde0 \u89e3\u9898\u601d\u8def"),(0,l.kt)("h3",{id:"\u7b97\u6cd5\u6d41\u7a0b"},"\u7b97\u6cd5\u6d41\u7a0b"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"\u7279\u5224\uff0c\u5bf9\u4e8e\u6570\u7ec4\u957f\u5ea6 nnn\uff0c\u5982\u679c\u6570\u7ec4\u4e3a nullnullnull \u6216\u8005\u6570\u7ec4\u957f\u5ea6\u5c0f\u4e8e 3\uff0c\u8fd4\u56de []\u3002"),(0,l.kt)("li",{parentName:"ol"},"\u5bf9\u6570\u7ec4\u8fdb\u884c\u6392\u5e8f\u3002"),(0,l.kt)("li",{parentName:"ol"},"\u904d\u5386\u6392\u5e8f\u540e\u6570\u7ec4\uff1a",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u82e5 nums","[i]",">0nums","[i]",">0nums","[i]",">0\uff1a\u56e0\u4e3a\u5df2\u7ecf\u6392\u5e8f\u597d\uff0c\u6240\u4ee5\u540e\u9762\u4e0d\u53ef\u80fd\u6709\u4e09\u4e2a\u6570\u52a0\u548c\u7b49\u4e8e 000\uff0c\u76f4\u63a5\u8fd4\u56de\u7ed3\u679c\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u5bf9\u4e8e\u91cd\u590d\u5143\u7d20\uff1a\u8df3\u8fc7\uff0c\u907f\u514d\u51fa\u73b0\u91cd\u590d\u89e3"),(0,l.kt)("li",{parentName:"ul"},"\u4ee4\u5de6\u6307\u9488 L=i+1L=i+1L=i+1\uff0c\u53f3\u6307\u9488 R=n\u22121R=n-1R=n\u22121\uff0c\u5f53 L<RL<RL<R \u65f6\uff0c\u6267\u884c\u5faa\u73af\uff1a",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u5f53 nums","[i]","+nums","[L]","+nums","[R]","==0nums","[i]","+nums","[L]","+nums","[R]","==0nums","[i]","+nums","[L]","+nums","[R]","==0\uff0c\u6267\u884c\u5faa\u73af\uff0c\u5224\u65ad\u5de6\u754c\u548c\u53f3\u754c\u662f\u5426\u548c\u4e0b\u4e00\u4f4d\u7f6e\u91cd\u590d\uff0c\u53bb\u9664\u91cd\u590d\u89e3\u3002\u5e76\u540c\u65f6\u5c06 L,RL,RL,R \u79fb\u5230\u4e0b\u4e00\u4f4d\u7f6e\uff0c\u5bfb\u627e\u65b0\u7684\u89e3"),(0,l.kt)("li",{parentName:"ul"},"\u82e5\u548c\u5927\u4e8e 000\uff0c\u8bf4\u660e nums","[R]","nums","[R]","nums","[R]"," \u592a\u5927\uff0cRRR \u5de6\u79fb"),(0,l.kt)("li",{parentName:"ul"},"\u82e5\u548c\u5c0f\u4e8e 000\uff0c\u8bf4\u660e nums","[L]","nums","[L]","nums","[L]"," \u592a\u5c0f\uff0cLLL \u53f3\u79fb")))))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"/**\n * @param {number[]} nums\n * @return {number[][]}\n */\nvar threeSum = function (nums) {\n  let ans = []\n  const len = nums.length\n  if (nums == null || len < 3) return ans\n  nums.sort((a, b) => a - b) // \u6392\u5e8f\n  for (let i = 0; i < len; i++) {\n    if (nums[i] > 0) break // \u5982\u679c\u5f53\u524d\u6570\u5b57\u5927\u4e8e0\uff0c\u5219\u4e09\u6570\u4e4b\u548c\u4e00\u5b9a\u5927\u4e8e0\uff0c\u6240\u4ee5\u7ed3\u675f\u5faa\u73af\n    if (i > 0 && nums[i] == nums[i - 1]) continue // \u53bb\u91cd\n    let L = i + 1\n    let R = len - 1\n    while (L < R) {\n      const sum = nums[i] + nums[L] + nums[R]\n      if (sum == 0) {\n        ans.push([nums[i], nums[L], nums[R]])\n        while (L < R && nums[L] == nums[L + 1]) L++ // \u53bb\u91cd\n        while (L < R && nums[R] == nums[R - 1]) R-- // \u53bb\u91cd\n        L++\n        R--\n      } else if (sum < 0) L++\n      else if (sum > 0) R--\n    }\n  }\n  return ans\n}\n")))}p.isMDXComponent=!0}}]);