"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7073],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=r.createContext({}),s=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(u.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,u=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),c=s(n),f=a,d=c["".concat(u,".").concat(f)]||c[f]||m[f]||l;return n?r.createElement(d,i(i({ref:t},p),{},{components:n})):r.createElement(d,i({ref:t},p))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,i=new Array(l);i[0]=c;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o.mdxType="string"==typeof e?e:a,i[1]=o;for(var s=2;s<l;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},2352:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>i,default:()=>m,frontMatter:()=>l,metadata:()=>o,toc:()=>s});var r=n(7462),a=(n(7294),n(3905));const l={title:"1. \u6700\u63a5\u8fd1\u7684\u4e09\u6570\u4e4b\u548c-16",description:"\u8003\u5bdf\u53cc\u6307\u9488",last_update:{date:"11/15/2022",author:"your name"}},i=void 0,o={unversionedId:"\u53cc\u6307\u9488/threeSumClosest",id:"\u53cc\u6307\u9488/threeSumClosest",title:"1. \u6700\u63a5\u8fd1\u7684\u4e09\u6570\u4e4b\u548c-16",description:"\u8003\u5bdf\u53cc\u6307\u9488",source:"@site/leetcode/06-\u53cc\u6307\u9488/01-threeSumClosest.md",sourceDirName:"06-\u53cc\u6307\u9488",slug:"/\u53cc\u6307\u9488/threeSumClosest",permalink:"/website/leetcode/\u53cc\u6307\u9488/threeSumClosest",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"1. \u6700\u63a5\u8fd1\u7684\u4e09\u6570\u4e4b\u548c-16",description:"\u8003\u5bdf\u53cc\u6307\u9488",last_update:{date:"11/15/2022",author:"your name"}},sidebar:"tutorialSidebar",previous:{title:"\u5341\u4e00\u3001\u53cc\u6307\u9488",permalink:"/website/leetcode/category/\u5341\u4e00\u53cc\u6307\u9488"},next:{title:"2. \u4e09\u6570\u4e4b\u548c-15",permalink:"/website/leetcode/\u53cc\u6307\u9488/threeSum"}},u={},s=[{value:"\u601d\u8def",id:"\u601d\u8def",level:2}],p={toc:s};function m(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"\u7ed9\u5b9a\u4e00\u4e2a\u5305\u62ec n \u4e2a\u6574\u6570\u7684\u6570\u7ec4 nums \u548c \u4e00\u4e2a\u76ee\u6807\u503c target\u3002\u627e\u51fa nums \u4e2d\u7684\u4e09\u4e2a\u6574\u6570\uff0c\u4f7f\u5f97\u5b83\u4eec\u7684\u548c\u4e0e target \u6700\u63a5\u8fd1\u3002\u8fd4\u56de\u8fd9\u4e09\u4e2a\u6570\u7684\u548c\u3002\u5047\u5b9a\u6bcf\u7ec4\u8f93\u5165\u53ea\u5b58\u5728\u552f\u4e00\u7b54\u6848\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"\u793a\u4f8b\uff1a\n\n\u8f93\u5165\uff1anums = [-1,2,1,-4], target = 1\n\u8f93\u51fa\uff1a2\n\u89e3\u91ca\uff1a\u4e0e target \u6700\u63a5\u8fd1\u7684\u548c\u662f 2 (-1 + 2 + 1 = 2) \u3002\n")),(0,a.kt)("p",null,"\u63d0\u793a\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"3 <= nums.length <= 10^3`\n`-10^3 <= nums[i] <= 10^3`\n`-10^4 <= target <= 10^4\n")),(0,a.kt)("p",null,"\u6765\u6e90\uff1a\u529b\u6263\uff08LeetCode\uff09\n\u94fe\u63a5\uff1a",(0,a.kt)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/3sum-closest"},"https://leetcode-cn.com/problems/3sum-closest")),(0,a.kt)("h2",{id:"\u601d\u8def"},"\u601d\u8def"),(0,a.kt)("p",null,"\u5148\u6309\u7167\u5347\u5e8f\u6392\u5e8f\uff0c\u7136\u540e\u5206\u522b\u4ece\u5de6\u5f80\u53f3\u4f9d\u6b21\u9009\u62e9\u4e00\u4e2a\u57fa\u7840\u70b9 ",(0,a.kt)("inlineCode",{parentName:"p"},"i"),"\uff08",(0,a.kt)("inlineCode",{parentName:"p"},"0 <= i <= nums.length - 3"),"\uff09\uff0c\u5728\u57fa\u7840\u70b9\u7684\u53f3\u4fa7\u7528\u53cc\u6307\u9488\u53bb\u4e0d\u65ad\u7684\u627e\u6700\u5c0f\u7684\u5dee\u503c\u3002"),(0,a.kt)("p",null,"\u5047\u8bbe\u57fa\u7840\u70b9\u662f ",(0,a.kt)("inlineCode",{parentName:"p"},"i"),"\uff0c\u521d\u59cb\u5316\u7684\u65f6\u5019\uff0c\u53cc\u6307\u9488\u5206\u522b\u662f\uff1a"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"strong"},"left")),"\uff1a",(0,a.kt)("inlineCode",{parentName:"li"},"i + 1"),"\uff0c\u57fa\u7840\u70b9\u53f3\u8fb9\u4e00\u4f4d\u3002"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"strong"},"right")),": ",(0,a.kt)("inlineCode",{parentName:"li"},"nums.length - 1")," \u6570\u7ec4\u6700\u540e\u4e00\u4f4d\u3002")),(0,a.kt)("p",null,"\u7136\u540e\u6c42\u6b64\u65f6\u7684\u548c\uff0c\u5982\u679c\u548c\u5927\u4e8e ",(0,a.kt)("inlineCode",{parentName:"p"},"target"),"\uff0c\u90a3\u4e48\u53ef\u4ee5\u628a\u53f3\u6307\u9488\u5de6\u79fb\u4e00\u4f4d\uff0c\u53bb\u8bd5\u8bd5\u66f4\u5c0f\u4e00\u70b9\u7684\u503c\uff0c\u53cd\u4e4b\u5219\u628a\u5de6\u6307\u9488\u53f3\u79fb\u3002"),(0,a.kt)("p",null,"\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\uff0c\u4e0d\u65ad\u66f4\u65b0\u5168\u5c40\u7684\u6700\u5c0f\u5dee\u503c ",(0,a.kt)("inlineCode",{parentName:"p"},"min"),"\uff0c\u548c\u6b64\u65f6\u8bb0\u5f55\u4e0b\u6765\u7684\u548c ",(0,a.kt)("inlineCode",{parentName:"p"},"res"),"\u3002"),(0,a.kt)("p",null,"\u6700\u540e\u8fd4\u56de ",(0,a.kt)("inlineCode",{parentName:"p"},"res")," \u5373\u53ef\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"/**\n * @param {number[]} nums\n * @param {number} target\n * @return {number}\n */\nlet threeSumClosest = function (nums, target) {\n  let n = nums.length\n  if (n === 3) {\n    return getSum(nums)\n  }\n  // \u5148\u5347\u5e8f\u6392\u5e8f \u6b64\u4e3a\u89e3\u9898\u7684\u524d\u7f6e\u6761\u4ef6\n  nums.sort((a, b) => a - b)\n\n  let min = Infinity // \u548c target \u7684\u6700\u5c0f\u5dee\n  let res\n\n  // \u4ece\u5de6\u5f80\u53f3\u4f9d\u6b21\u5c1d\u8bd5\u5b9a\u4e00\u4e2a\u57fa\u7840\u6307\u9488 \u53f3\u8fb9\u81f3\u5c11\u518d\u4fdd\u7559\u4e24\u4f4d \u5426\u5219\u65e0\u6cd5\u51d1\u62103\u4e2a\n  for (let i = 0; i <= nums.length - 3; i++) {\n    let basic = nums[i]\n    let left = i + 1 // \u5de6\u6307\u9488\u5148\u4ece i \u53f3\u4fa7\u7684\u7b2c\u4e00\u4f4d\u5f00\u59cb\u5c1d\u8bd5\n    let right = n - 1 // \u53f3\u6307\u9488\u5148\u4ece\u6570\u7ec4\u6700\u540e\u4e00\u9879\u5f00\u59cb\u5c1d\u8bd5\n\n    while (left < right) {\n      let sum = basic + nums[left] + nums[right] // \u4e09\u6570\u6c42\u548c\n      // \u66f4\u65b0\u6700\u5c0f\u5dee\n      let diff = Math.abs(sum - target)\n      if (diff < min) {\n        min = diff\n        res = sum\n      }\n      if (sum < target) {\n        // \u6c42\u51fa\u7684\u548c\u5982\u679c\u5c0f\u4e8e\u76ee\u6807\u503c\u7684\u8bdd \u53ef\u4ee5\u5c1d\u8bd5\u628a\u5de6\u6307\u9488\u53f3\u79fb \u6269\u5927\u503c\n        left++\n      } else if (sum > target) {\n        // \u53cd\u4e4b\u5219\u53f3\u6307\u9488\u5de6\u79fb\n        right--\n      } else {\n        // \u76f8\u7b49\u7684\u8bdd \u5dee\u5c31\u4e3a0 \u4e00\u5b9a\u662f\u7b54\u6848\n        return sum\n      }\n    }\n  }\n\n  return res\n}\n\nfunction getSum(nums) {\n  return nums.reduce((total, cur) => total + cur, 0)\n}\n")))}m.isMDXComponent=!0}}]);