"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6150],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>s});var r=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,l=function(e,t){if(null==e)return{};var n,r,l={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var o=r.createContext({}),u=function(e){var t=r.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(o.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,l=e.mdxType,i=e.originalType,o=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),d=u(n),s=l,k=d["".concat(o,".").concat(s)]||d[s]||m[s]||i;return n?r.createElement(k,a(a({ref:t},c),{},{components:n})):r.createElement(k,a({ref:t},c))}));function s(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var i=n.length,a=new Array(i);a[0]=d;var p={};for(var o in t)hasOwnProperty.call(t,o)&&(p[o]=t[o]);p.originalType=e,p.mdxType="string"==typeof e?e:l,a[1]=p;for(var u=2;u<i;u++)a[u]=n[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1643:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>a,default:()=>m,frontMatter:()=>i,metadata:()=>p,toc:()=>u});var r=n(7462),l=(n(7294),n(3905));const i={title:"\u722c\u697c\u68af-70",description:"\u52a8\u6001\u89c4\u5212 \u9012\u5f52",last_update:{date:"11/19/2022",author:"\u9ad8\u7ea2\u7fd4"}},a=void 0,p={unversionedId:"\u52a8\u6001\u89c4\u5212/climbStairs",id:"\u52a8\u6001\u89c4\u5212/climbStairs",title:"\u722c\u697c\u68af-70",description:"\u52a8\u6001\u89c4\u5212 \u9012\u5f52",source:"@site/leetcode/05-\u52a8\u6001\u89c4\u5212/03-climbStairs.md",sourceDirName:"05-\u52a8\u6001\u89c4\u5212",slug:"/\u52a8\u6001\u89c4\u5212/climbStairs",permalink:"/website/leetcode/\u52a8\u6001\u89c4\u5212/climbStairs",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"\u722c\u697c\u68af-70",description:"\u52a8\u6001\u89c4\u5212 \u9012\u5f52",last_update:{date:"11/19/2022",author:"\u9ad8\u7ea2\u7fd4"}},sidebar:"tutorialSidebar",previous:{title:"\u6590\u6ce2\u90a3\u5951\u6570-509",permalink:"/website/leetcode/\u52a8\u6001\u89c4\u5212/fib"},next:{title:"\u4f7f\u7528\u6700\u5c0f\u82b1\u8d39\u722c\u697c\u68af-746",permalink:"/website/leetcode/\u52a8\u6001\u89c4\u5212/minCostClimbingStairs"}},o={},u=[{value:"\u601d\u8def",id:"\u601d\u8def",level:2},{value:"\u7b54\u6848",id:"\u7b54\u6848",level:2},{value:"\u722c m \u9636",id:"\u722c-m-\u9636",level:3}],c={toc:u};function m(e){let{components:t,...n}=e;return(0,l.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"\u5047\u8bbe\u4f60\u6b63\u5728\u722c\u697c\u68af\u3002\u9700\u8981 ",(0,l.kt)("inlineCode",{parentName:"p"},"n")," \u9636\u4f60\u624d\u80fd\u5230\u8fbe\u697c\u9876\u3002"),(0,l.kt)("p",null,"\u6bcf\u6b21\u4f60\u53ef\u4ee5\u722c ",(0,l.kt)("inlineCode",{parentName:"p"},"1")," \u6216 ",(0,l.kt)("inlineCode",{parentName:"p"},"2")," \u4e2a\u53f0\u9636\u3002\u4f60\u6709\u591a\u5c11\u79cd\u4e0d\u540c\u7684\u65b9\u6cd5\u53ef\u4ee5\u722c\u5230\u697c\u9876\u5462\uff1f"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"\u793a\u4f8b 1\uff1a")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"\u8f93\u5165\uff1an = 2\n\u8f93\u51fa\uff1a2\n\u89e3\u91ca\uff1a\u6709\u4e24\u79cd\u65b9\u6cd5\u53ef\u4ee5\u722c\u5230\u697c\u9876\u3002\n1. 1 \u9636 + 1 \u9636\n2. 2 \u9636\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"\u793a\u4f8b 2\uff1a")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"\u8f93\u5165\uff1an = 3\n\u8f93\u51fa\uff1a3\n\u89e3\u91ca\uff1a\u6709\u4e09\u79cd\u65b9\u6cd5\u53ef\u4ee5\u722c\u5230\u697c\u9876\u3002\n1. 1 \u9636 + 1 \u9636 + 1 \u9636\n2. 1 \u9636 + 2 \u9636\n3. 2 \u9636 + 1 \u9636\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"\u63d0\u793a\uff1a")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"1 <= n <= 45"))),(0,l.kt)("p",null,"\u6765\u6e90\uff1a\u529b\u6263\uff08LeetCode\uff09\n\u94fe\u63a5\uff1a",(0,l.kt)("a",{parentName:"p",href:"https://leetcode.cn/problems/climbing-stairs/description/"},"https://leetcode.cn/problems/climbing-stairs/description/")),(0,l.kt)("h2",{id:"\u601d\u8def"},"\u601d\u8def"),(0,l.kt)("p",null,"\u722c\u5230\u7b2c\u4e00\u5c42\u697c\u68af\u6709\u4e00\u79cd\u65b9\u6cd5\uff0c\u722c\u5230\u4e8c\u5c42\u697c\u68af\u6709\u4e24\u79cd\u65b9\u6cd5\u3002"),(0,l.kt)("p",null,"\u90a3\u4e48\u7b2c\u4e00\u5c42\u697c\u68af\u518d\u8de8\u4e24\u6b65\u5c31\u5230\u7b2c\u4e09\u5c42 \uff0c\u7b2c\u4e8c\u5c42\u697c\u68af\u518d\u8de8\u4e00\u6b65\u5c31\u5230\u7b2c\u4e09\u5c42\u3002"),(0,l.kt)("p",null,"\u6240\u4ee5\u5230\u7b2c\u4e09\u5c42\u697c\u68af\u7684\u72b6\u6001\u53ef\u4ee5\u7531\u7b2c\u4e8c\u5c42\u697c\u68af \u548c \u5230\u7b2c\u4e00\u5c42\u697c\u68af\u72b6\u6001\u63a8\u5bfc\u51fa\u6765\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u60f3\u5230\u52a8\u6001\u89c4\u5212\u4e86\u3002"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"\u6211\u4eec\u6765\u5206\u6790\u4e00\u4e0b\uff0c\u52a8\u89c4\u4e94\u90e8\u66f2\uff1a")),(0,l.kt)("p",null,"\u5b9a\u4e49\u4e00\u4e2a\u4e00\u7ef4\u6570\u7ec4\u6765\u8bb0\u5f55\u4e0d\u540c\u697c\u5c42\u7684\u72b6\u6001"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"\u786e\u5b9a dp \u6570\u7ec4\u4ee5\u53ca\u4e0b\u6807\u7684\u542b\u4e49")),(0,l.kt)("p",null,"\u200b p","[i]","\uff1a \u722c\u5230\u7b2c i \u5c42\u697c\u68af\uff0c\u6709 dp","[i]","\u79cd\u65b9\u6cd5"),(0,l.kt)("ol",{start:2},(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"\u786e\u5b9a\u9012\u63a8\u516c\u5f0f"),(0,l.kt)("p",{parentName:"li"},"dp","[i]"," = dp","[i - 1]"," + dp","[i - 2]"," \u3002")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"dp \u6570\u7ec4\u5982\u4f55\u521d\u59cb\u5316"))),(0,l.kt)("p",null,"\u200b dp","[1]"," = 1\uff0cdp","[2]"," = 2"),(0,l.kt)("ol",{start:4},(0,l.kt)("li",{parentName:"ol"},"\u786e\u5b9a\u904d\u5386\u987a\u5e8f")),(0,l.kt)("p",null,"\u200b \u4ece\u9012\u63a8\u516c\u5f0f dp","[i]"," = dp","[i - 1]"," + dp","[i - 2]",";\u4e2d\u53ef\u4ee5\u770b\u51fa\uff0c\u904d\u5386\u987a\u5e8f\u4e00\u5b9a\u662f\u4ece\u524d\u5411\u540e\u904d\u5386\u7684"),(0,l.kt)("ol",{start:5},(0,l.kt)("li",{parentName:"ol"},"\u4e3e\u4f8b\u63a8\u5bfc dp \u6570\u7ec4")),(0,l.kt)("p",null,"\u200b \u4e3e\u4f8b\u5f53 n \u4e3a 5 \u7684\u65f6\u5019\uff0cdp table\uff08dp \u6570\u7ec4\uff09\u5e94\u8be5\u662f\u8fd9\u6837\u7684 1,2,3,5,8"),(0,l.kt)("h2",{id:"\u7b54\u6848"},"\u7b54\u6848"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"/**\n * @param {number} n\n * @return {number}\n */\nvar climbStairs = function (n) {\n  let db = [0, 1, 2]\n  for (let i = 3; i <= n; i++) {\n    db[i] = db[i - 1] + db[i - 2]\n  }\n  return db[n]\n}\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(n)"),(0,l.kt)("li",{parentName:"ul"},"\u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(n)")),(0,l.kt)("h3",{id:"\u722c-m-\u9636"},"\u722c m \u9636"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"function climbStairs(n: number): number {\n  /**\n        \u4e00\u6b21\u53ef\u4ee5\u722cm\u9636\n        dp[i]: i\u9636\u697c\u68af\u7684\u65b9\u6cd5\u79cd\u6570\n        dp[1]: 1;\n        dp[2]: 2;\n        dp[3]: dp[2] + dp[1];\n        ...\n        dp[i]: dp[i - 1] + dp[i - 2] + ... + dp[max(i - m, 1)]; \u4ecei-1\u52a0\u5230max(i-m, 1)\n     */\n  const m: number = 2 // \u672c\u9898m\u4e3a2\n  const dp: number[] = new Array(n + 1).fill(0)\n  dp[1] = 1\n  dp[2] = 2\n  for (let i = 3; i <= n; i++) {\n    const end: number = Math.max(i - m, 1)\n    for (let j = i - 1; j >= end; j--) {\n      dp[i] += dp[j]\n    }\n  }\n  return dp[n]\n}\n")))}m.isMDXComponent=!0}}]);