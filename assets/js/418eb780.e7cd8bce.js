"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8265],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var i=r.createContext({}),p=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(i.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,l=e.originalType,i=e.parentName,c=u(e,["components","mdxType","originalType","parentName"]),d=p(n),m=o,f=d["".concat(i,".").concat(m)]||d[m]||s[m]||l;return n?r.createElement(f,a(a({ref:t},c),{},{components:n})):r.createElement(f,a({ref:t},c))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var l=n.length,a=new Array(l);a[0]=d;var u={};for(var i in t)hasOwnProperty.call(t,i)&&(u[i]=t[i]);u.originalType=e,u.mdxType="string"==typeof e?e:o,a[1]=u;for(var p=2;p<l;p++)a[p]=n[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},826:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>a,default:()=>s,frontMatter:()=>l,metadata:()=>u,toc:()=>p});var r=n(7462),o=(n(7294),n(3905));const l={title:"10. \u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u8282\u70b9\u4e2a\u6570",last_update:{date:"12/29/2022",author:"\u9ad8\u7ea2\u7fd4"}},a=void 0,u={unversionedId:"\u4e8c\u53c9\u6811/countNodes",id:"\u4e8c\u53c9\u6811/countNodes",title:"10. \u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u8282\u70b9\u4e2a\u6570",description:"\u9898\u76ee",source:"@site/leetcode/04-\u4e8c\u53c9\u6811/10-countNodes.md",sourceDirName:"04-\u4e8c\u53c9\u6811",slug:"/\u4e8c\u53c9\u6811/countNodes",permalink:"/website/leetcode/\u4e8c\u53c9\u6811/countNodes",draft:!1,tags:[],version:"current",sidebarPosition:10,frontMatter:{title:"10. \u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u8282\u70b9\u4e2a\u6570",last_update:{date:"12/29/2022",author:"\u9ad8\u7ea2\u7fd4"}},sidebar:"tutorialSidebar",previous:{title:"9. \u4e8c\u53c9\u6811\u7684\u6700\u5c0f\u6df1\u5ea6",permalink:"/website/leetcode/\u4e8c\u53c9\u6811/minDepth"},next:{title:"11. \u5e73\u8861\u4e8c\u53c9\u6811",permalink:"/website/leetcode/\u4e8c\u53c9\u6811/balanceTree"}},i={},p=[{value:"\u9898\u76ee",id:"\u9898\u76ee",level:2},{value:"\u7b54\u6848",id:"\u7b54\u6848",level:2},{value:"\u9012\u5f52",id:"\u9012\u5f52",level:3},{value:"\u8fed\u4ee3\uff08\u5c42\u5e8f\u904d\u5386\uff09",id:"\u8fed\u4ee3\u5c42\u5e8f\u904d\u5386",level:3},{value:"\u5229\u7528\u5b8c\u5168\u4e8c\u53c9\u6811\u6027\u8d28",id:"\u5229\u7528\u5b8c\u5168\u4e8c\u53c9\u6811\u6027\u8d28",level:3}],c={toc:p};function s(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"\u9898\u76ee"},"\u9898\u76ee"),(0,o.kt)("p",null,"\u7ed9\u4f60\u4e00\u68f5 ",(0,o.kt)("strong",{parentName:"p"},"\u5b8c\u5168\u4e8c\u53c9\u6811")," \u7684\u6839\u8282\u70b9 ",(0,o.kt)("inlineCode",{parentName:"p"},"root")," \uff0c\u6c42\u51fa\u8be5\u6811\u7684\u8282\u70b9\u4e2a\u6570\u3002"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://baike.baidu.com/item/%E5%AE%8C%E5%85%A8%E4%BA%8C%E5%8F%89%E6%A0%91/7773232?fr=aladdin"},"\u5b8c\u5168\u4e8c\u53c9\u6811")," \u7684\u5b9a\u4e49\u5982\u4e0b\uff1a\u5728\u5b8c\u5168\u4e8c\u53c9\u6811\u4e2d\uff0c\u9664\u4e86\u6700\u5e95\u5c42\u8282\u70b9\u53ef\u80fd\u6ca1\u586b\u6ee1\u5916\uff0c\u5176\u4f59\u6bcf\u5c42\u8282\u70b9\u6570\u90fd\u8fbe\u5230\u6700\u5927\u503c\uff0c\u5e76\u4e14\u6700\u4e0b\u9762\u4e00\u5c42\u7684\u8282\u70b9\u90fd\u96c6\u4e2d\u5728\u8be5\u5c42\u6700\u5de6\u8fb9\u7684\u82e5\u5e72\u4f4d\u7f6e\u3002\u82e5\u6700\u5e95\u5c42\u4e3a\u7b2c ",(0,o.kt)("inlineCode",{parentName:"p"},"h")," \u5c42\uff0c\u5219\u8be5\u5c42\u5305\u542b ",(0,o.kt)("inlineCode",{parentName:"p"},"1~ 2h")," \u4e2a\u8282\u70b9\u3002"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"\u793a\u4f8b 1\uff1a")),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://assets.leetcode.com/uploads/2021/01/14/complete.jpg",alt:"img"})),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"\u8f93\u5165\uff1aroot = [1,2,3,4,5,6]\n\u8f93\u51fa\uff1a6\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"\u793a\u4f8b 2\uff1a")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"\u8f93\u5165\uff1aroot = []\n\u8f93\u51fa\uff1a0\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"\u793a\u4f8b 3\uff1a")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"\u8f93\u5165\uff1aroot = [1]\n\u8f93\u51fa\uff1a1\n")),(0,o.kt)("p",null,"\u6765\u6e90\uff1a\u529b\u6263\uff08LeetCode\uff09"),(0,o.kt)("p",null,"\u94fe\u63a5\uff1a",(0,o.kt)("a",{parentName:"p",href:"https://leetcode.cn/problems/count-complete-tree-nodes/description/"},"https://leetcode.cn/problems/count-complete-tree-nodes/description/")),(0,o.kt)("h2",{id:"\u7b54\u6848"},"\u7b54\u6848"),(0,o.kt)("h3",{id:"\u9012\u5f52"},"\u9012\u5f52"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"var countNodes = function (root) {\n  //\u9012\u5f52\u6cd5\u8ba1\u7b97\u4e8c\u53c9\u6811\u8282\u70b9\u6570\n  // 1. \u786e\u5b9a\u9012\u5f52\u51fd\u6570\u53c2\u6570\n  const getNodeSum = function (node) {\n    //2. \u786e\u5b9a\u7ec8\u6b62\u6761\u4ef6\n    if (node === null) {\n      return 0\n    }\n    //3. \u786e\u5b9a\u5355\u5c42\u9012\u5f52\u903b\u8f91\n    let leftNum = getNodeSum(node.left)\n    let rightNum = getNodeSum(node.right)\n    return leftNum + rightNum + 1\n  }\n  return getNodeSum(root)\n}\n")),(0,o.kt)("h3",{id:"\u8fed\u4ee3\u5c42\u5e8f\u904d\u5386"},"\u8fed\u4ee3\uff08\u5c42\u5e8f\u904d\u5386\uff09"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"var countNodes = function (root) {\n  //\u5c42\u5e8f\u904d\u5386\n  let queue = []\n  if (root === null) {\n    return 0\n  }\n  queue.push(root)\n  let nodeNums = 0\n  while (queue.length) {\n    let length = queue.length\n    while (length--) {\n      let node = queue.shift()\n      nodeNums++\n      node.left && queue.push(node.left)\n      node.right && queue.push(node.right)\n    }\n  }\n  return nodeNums\n}\n")),(0,o.kt)("h3",{id:"\u5229\u7528\u5b8c\u5168\u4e8c\u53c9\u6811\u6027\u8d28"},"\u5229\u7528\u5b8c\u5168\u4e8c\u53c9\u6811\u6027\u8d28"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"var countNodes = function (root) {\n  //\u5229\u7528\u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u7279\u70b9\n  if (root === null) {\n    return 0\n  }\n  let left = root.left\n  let right = root.right\n  let leftDepth = 0,\n    rightDepth = 0\n  while (left) {\n    left = left.left\n    leftDepth++\n  }\n  while (right) {\n    right = right.right\n    rightDepth++\n  }\n  if (leftDepth == rightDepth) {\n    return Math.pow(2, leftDepth + 1) - 1\n  }\n  return countNodes(root.left) + countNodes(root.right) + 1\n}\n")))}s.isMDXComponent=!0}}]);