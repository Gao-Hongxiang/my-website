"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5061],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>d});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=r.createContext({}),u=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},m=function(e){var t=u(e.components);return r.createElement(i.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,i=e.parentName,m=p(e,["components","mdxType","originalType","parentName"]),c=u(n),d=a,f=c["".concat(i,".").concat(d)]||c[d]||s[d]||l;return n?r.createElement(f,o(o({ref:t},m),{},{components:n})):r.createElement(f,o({ref:t},m))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,o=new Array(l);o[0]=c;var p={};for(var i in t)hasOwnProperty.call(t,i)&&(p[i]=t[i]);p.originalType=e,p.mdxType="string"==typeof e?e:a,o[1]=p;for(var u=2;u<l;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},4609:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>o,default:()=>s,frontMatter:()=>l,metadata:()=>p,toc:()=>u});var r=n(7462),a=(n(7294),n(3905));const l={title:"1. \u4e24\u6570\u4e4b\u548c-1",description:"\u8003\u5bdfhasMap",last_update:{date:"11/15/2022",author:"you name"}},o=void 0,p={unversionedId:"\u6570\u7ec4/twoSum",id:"\u6570\u7ec4/twoSum",title:"1. \u4e24\u6570\u4e4b\u548c-1",description:"\u8003\u5bdfhasMap",source:"@site/leetcode/01-\u6570\u7ec4/01-twoSum.md",sourceDirName:"01-\u6570\u7ec4",slug:"/\u6570\u7ec4/twoSum",permalink:"/website/leetcode/\u6570\u7ec4/twoSum",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"1. \u4e24\u6570\u4e4b\u548c-1",description:"\u8003\u5bdfhasMap",last_update:{date:"11/15/2022",author:"you name"}},sidebar:"tutorialSidebar",previous:{title:"\u6570\u7ec4\u7406\u8bba\u77e5\u8bc6",permalink:"/website/leetcode/\u6570\u7ec4/intro"},next:{title:"2. \u4e8c\u5206\u67e5\u627e- 704",permalink:"/website/leetcode/\u6570\u7ec4/search"}},i={},u=[{value:"\ud83e\udde0 \u89e3\u9898\u601d\u8def",id:"-\u89e3\u9898\u601d\u8def",level:2}],m={toc:u};function s(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 ",(0,a.kt)("inlineCode",{parentName:"p"},"nums")," \u548c\u4e00\u4e2a\u6574\u6570\u76ee\u6807\u503c ",(0,a.kt)("inlineCode",{parentName:"p"},"target"),"\uff0c\u8bf7\u4f60\u5728\u8be5\u6570\u7ec4\u4e2d\u627e\u51fa ",(0,a.kt)("strong",{parentName:"p"},"\u548c\u4e3a\u76ee\u6807\u503c")," ",(0,a.kt)("em",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"em"},"target"))," \u7684\u90a3 ",(0,a.kt)("strong",{parentName:"p"},"\u4e24\u4e2a")," \u6574\u6570\uff0c\u5e76\u8fd4\u56de\u5b83\u4eec\u7684\u6570\u7ec4\u4e0b\u6807\u3002"),(0,a.kt)("p",null,"\u4f60\u53ef\u4ee5\u5047\u8bbe\u6bcf\u79cd\u8f93\u5165\u53ea\u4f1a\u5bf9\u5e94\u4e00\u4e2a\u7b54\u6848\u3002\u4f46\u662f\uff0c\u6570\u7ec4\u4e2d\u540c\u4e00\u4e2a\u5143\u7d20\u5728\u7b54\u6848\u91cc\u4e0d\u80fd\u91cd\u590d\u51fa\u73b0\u3002"),(0,a.kt)("p",null,"\u4f60\u53ef\u4ee5\u6309\u4efb\u610f\u987a\u5e8f\u8fd4\u56de\u7b54\u6848\u3002"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"\u793a\u4f8b 1\uff1a")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"\u8f93\u5165\uff1anums = [2,7,11,15], target = 9\n\u8f93\u51fa\uff1a[0,1]\n\u89e3\u91ca\uff1a\u56e0\u4e3a nums[0] + nums[1] == 9 \uff0c\u8fd4\u56de [0, 1] \u3002\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"\u793a\u4f8b 2\uff1a")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"\u8f93\u5165\uff1anums = [3,2,4], target = 6\n\u8f93\u51fa\uff1a[1,2]\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"\u793a\u4f8b 3\uff1a")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"\u8f93\u5165\uff1anums = [3,3], target = 6\n\u8f93\u51fa\uff1a[0,1]\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"\u63d0\u793a\uff1a")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"2 <= nums.length <= 104")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"-109 <= nums[i] <= 109")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"-109 <= target <= 109")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"\u53ea\u4f1a\u5b58\u5728\u4e00\u4e2a\u6709\u6548\u7b54\u6848"))),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"\u8fdb\u9636\uff1a"),"\u4f60\u53ef\u4ee5\u60f3\u51fa\u4e00\u4e2a\u65f6\u95f4\u590d\u6742\u5ea6\u5c0f\u4e8e ",(0,a.kt)("inlineCode",{parentName:"p"},"O(n2)")," \u7684\u7b97\u6cd5\u5417\uff1f"),(0,a.kt)("p",null,"\u6765\u6e90\uff1a\u529b\u6263\uff08LeetCode\uff09\n\u94fe\u63a5\uff1a",(0,a.kt)("a",{parentName:"p",href:"https://leetcode.cn/problems/two-sum/"},"https://leetcode.cn/problems/two-sum/")),(0,a.kt)("h2",{id:"-\u89e3\u9898\u601d\u8def"},"\ud83e\udde0 \u89e3\u9898\u601d\u8def"),(0,a.kt)("p",null,"\u6839\u636e\u9898\u610f\uff0c\u5982\u679c\u6211\u4eec\u4f7f\u7528\u66b4\u7834\uff0c\u4f1a\u5bfc\u81f4\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a n^2\uff0c\u8fd9\u6837\u7684\u4ee3\u4ef7\u65e0\u7591\u662f\u5f88\u5927\u7684\u3002"),(0,a.kt)("p",null,"\u6240\u4ee5\u6211\u4eec\u5f88\u5bb9\u6613\u60f3\u5230\u7528\u54c8\u5e0c\u8868\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002"),(0,a.kt)("p",null,"\u6211\u4eec\u904d\u5386\u5230\u6570\u5b57 aaa \u65f6\uff0c\u7528 targettargettarget \u51cf\u53bb aaa\uff0c\u5c31\u4f1a\u5f97\u5230 bbb\uff0c\u82e5 bbb \u5b58\u5728\u4e8e\u54c8\u5e0c\u8868\u4e2d\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u76f4\u63a5\u8fd4\u56de\u7ed3\u679c\u4e86\u3002\u82e5 bbb \u4e0d\u5b58\u5728\uff0c\u90a3\u4e48\u6211\u4eec\u9700\u8981\u5c06 aaa \u5b58\u5165\u54c8\u5e0c\u8868\uff0c\u597d\u8ba9\u540e\u7eed\u904d\u5386\u7684\u6570\u5b57\u4f7f\u7528\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"/**\n * @param {number[]} nums\n * @param {number} target\n * @return {number[]}\n */\nvar twoSum = function (nums, target) {\n  let map = new Map()\n  for (let i = 0; i < nums.length; i++) {\n    let\n    if (map.has(target - nums[i])) {\n      return [map.get(target - nums[i]), i]\n    } else {\n      map.set(nums[i], i)\n    }\n  }\n  return []\n}\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const twoSum = function (nums, target) {\n  // \u8fd9\u91cc\u6211\u7528\u5bf9\u8c61\u6765\u6a21\u62df map \u7684\u80fd\u529b\n  const diffs = {}\n  // \u7f13\u5b58\u6570\u7ec4\u957f\u5ea6\n  const len = nums.length\n  // \u904d\u5386\u6570\u7ec4\n  for (let i = 0; i < len; i++) {\n    // \u5224\u65ad\u5f53\u524d\u503c\u5bf9\u5e94\u7684 target \u5dee\u503c\u662f\u5426\u5b58\u5728\uff08\u662f\u5426\u5df2\u904d\u5386\u8fc7\uff09\n    if (diffs[target - nums[i]] !== undefined) {\n      // \u82e5\u6709\u5bf9\u5e94\u5dee\u503c\uff0c\u90a3\u4e48\u7b54\u6848get\uff01\n      return [diffs[target - nums[i]], i]\n    }\n    // \u82e5\u6ca1\u6709\u5bf9\u5e94\u5dee\u503c\uff0c\u5219\u8bb0\u5f55\u5f53\u524d\u503c\n    diffs[nums[i]] = i\n  }\n}\n")))}s.isMDXComponent=!0}}]);