"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[4974],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>f});var r=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,l=function(e,t){if(null==e)return{};var n,r,l={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var u=r.createContext({}),p=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=p(e.components);return r.createElement(u.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,l=e.mdxType,a=e.originalType,u=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),m=p(n),f=l,d=m["".concat(u,".").concat(f)]||m[f]||c[f]||a;return n?r.createElement(d,o(o({ref:t},s),{},{components:n})):r.createElement(d,o({ref:t},s))}));function f(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var a=n.length,o=new Array(a);o[0]=m;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i.mdxType="string"==typeof e?e:l,o[1]=i;for(var p=2;p<a;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},3031:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>c,frontMatter:()=>a,metadata:()=>i,toc:()=>p});var r=n(7462),l=(n(7294),n(3905));const a={title:"7. \u5bf9\u79f0\u4e8c\u53c9\u6811",last_update:{date:"12/29/2022",author:"\u9ad8\u7ea2\u7fd4"}},o=void 0,i={unversionedId:"\u4e8c\u53c9\u6811/isSymmetric",id:"\u4e8c\u53c9\u6811/isSymmetric",title:"7. \u5bf9\u79f0\u4e8c\u53c9\u6811",description:"\u9898\u76ee",source:"@site/leetcode/04-\u4e8c\u53c9\u6811/07-isSymmetric.md",sourceDirName:"04-\u4e8c\u53c9\u6811",slug:"/\u4e8c\u53c9\u6811/isSymmetric",permalink:"/website/leetcode/\u4e8c\u53c9\u6811/isSymmetric",draft:!1,tags:[],version:"current",sidebarPosition:7,frontMatter:{title:"7. \u5bf9\u79f0\u4e8c\u53c9\u6811",last_update:{date:"12/29/2022",author:"\u9ad8\u7ea2\u7fd4"}},sidebar:"tutorialSidebar",previous:{title:"6. \u7ffb\u8f6c\u4e8c\u53c9\u6811",permalink:"/website/leetcode/\u4e8c\u53c9\u6811/invertTree"},next:{title:"8. \u4e8c\u53c9\u6811\u7684\u6700\u5927\u6df1\u5ea6",permalink:"/website/leetcode/\u4e8c\u53c9\u6811/maxDepth"}},u={},p=[{value:"\u9898\u76ee",id:"\u9898\u76ee",level:2},{value:"\u7b54\u6848",id:"\u7b54\u6848",level:2},{value:"\u9012\u5f52",id:"\u9012\u5f52",level:3},{value:"<strong>\u540e\u5e8f</strong>",id:"\u540e\u5e8f",level:4},{value:"\u8fed\u4ee3",id:"\u8fed\u4ee3",level:2}],s={toc:p};function c(e){let{components:t,...n}=e;return(0,l.kt)("wrapper",(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"\u9898\u76ee"},"\u9898\u76ee"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"\u7ed9\u4f60\u4e00\u4e2a\u4e8c\u53c9\u6811\u7684\u6839\u8282\u70b9 ",(0,l.kt)("inlineCode",{parentName:"p"},"root")," \uff0c \u68c0\u67e5\u5b83\u662f\u5426\u8f74\u5bf9\u79f0\u3002"),(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"\u793a\u4f8b 1\uff1a")),(0,l.kt)("p",{parentName:"li"},(0,l.kt)("img",{parentName:"p",src:"https://assets.leetcode.com/uploads/2021/02/19/symtree1.jpg",alt:"img"})),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre"},"\u8f93\u5165\uff1aroot = [1,2,2,3,4,4,3]\n\u8f93\u51fa\uff1atrue\n")),(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"\u793a\u4f8b 2\uff1a")),(0,l.kt)("p",{parentName:"li"},(0,l.kt)("img",{parentName:"p",src:"https://assets.leetcode.com/uploads/2021/02/19/symtree2.jpg",alt:"img"})),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre"},"\u8f93\u5165\uff1aroot = [1,2,2,null,3,null,3]\n\u8f93\u51fa\uff1afalse\n")),(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"\u63d0\u793a\uff1a")),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u6811\u4e2d\u8282\u70b9\u6570\u76ee\u5728\u8303\u56f4 ",(0,l.kt)("inlineCode",{parentName:"li"},"[1, 1000]")," \u5185"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"-100 <= Node.val <= 100"))),(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"\u8fdb\u9636\uff1a"),"\u4f60\u53ef\u4ee5\u8fd0\u7528\u9012\u5f52\u548c\u8fed\u4ee3\u4e24\u79cd\u65b9\u6cd5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u5417\uff1f"))),(0,l.kt)("p",null,"\u6765\u6e90\uff1a\u529b\u6263\uff08LeetCode\uff09"),(0,l.kt)("p",null,"\u94fe\u63a5\uff1a",(0,l.kt)("a",{parentName:"p",href:"https://leetcode.cn/problems/symmetric-tree/"},"https://leetcode.cn/problems/symmetric-tree/")),(0,l.kt)("h2",{id:"\u7b54\u6848"},"\u7b54\u6848"),(0,l.kt)("h3",{id:"\u9012\u5f52"},"\u9012\u5f52"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"\u4e09\u90e8\u66f2")),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"\u786e\u5b9a\u9012\u5f52\u51fd\u6570\u7684\u53c2\u6570\u548c\u8fd4\u56de\u503c",(0,l.kt)("blockquote",{parentName:"li"},(0,l.kt)("p",{parentName:"blockquote"},"\u56e0\u4e3a\u6211\u4eec\u8981\u6bd4\u8f83\u7684\u662f\u6839\u8282\u70b9\u7684\u4e24\u4e2a\u5b50\u6811\u662f\u5426\u662f\u76f8\u4e92\u7ffb\u8f6c\u7684\uff0c\u8fdb\u800c\u5224\u65ad\u8fd9\u4e2a\u6811\u662f\u4e0d\u662f\u5bf9\u79f0\u6811\uff0c\u6240\u4ee5\u8981\u6bd4\u8f83\u7684\u662f\u4e24\u4e2a\u6811\uff0c\u53c2\u6570\u81ea\u7136\u4e5f\u662f\u5de6\u5b50\u6811\u8282\u70b9\u548c\u53f3\u5b50\u6811\u8282\u70b9\u3002")))),(0,l.kt)("p",null,"\u8fd4\u56de\u503c\u81ea\u7136\u662f bool \u7c7b\u578b\u3002"),(0,l.kt)("ol",{start:2},(0,l.kt)("li",{parentName:"ol"},"\u786e\u5b9a\u7ec8\u6b62\u6761\u4ef6")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u5de6\u8282\u70b9\u4e3a\u7a7a\uff0c\u53f3\u8282\u70b9\u4e0d\u4e3a\u7a7a\uff0c\u4e0d\u5bf9\u79f0\uff0creturn false"),(0,l.kt)("li",{parentName:"ul"},"\u5de6\u4e0d\u4e3a\u7a7a\uff0c\u53f3\u4e3a\u7a7a\uff0c\u4e0d\u5bf9\u79f0 return false"),(0,l.kt)("li",{parentName:"ul"},"\u5de6\u53f3\u90fd\u4e3a\u7a7a\uff0c\u5bf9\u79f0\uff0c\u8fd4\u56de true"),(0,l.kt)("li",{parentName:"ul"},"\u5de6\u53f3\u90fd\u4e0d\u4e3a\u7a7a\uff0c\u6bd4\u8f83\u8282\u70b9\u6570\u503c\uff0c\u4e0d\u76f8\u540c\u5c31 return false")),(0,l.kt)("ol",{start:3},(0,l.kt)("li",{parentName:"ol"},"\u786e\u5b9a\u5355\u5c42\u9012\u5f52\u7684\u903b\u8f91")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"let outSide = compareNode(left.left, right.right)\nlet inSide = compareNode(left.right, right.left)\nreturn outSide && inSide\n")),(0,l.kt)("h4",{id:"\u540e\u5e8f"},(0,l.kt)("strong",{parentName:"h4"},"\u540e\u5e8f")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"var isSymmetric = function (root) {\n  // \u4f7f\u7528\u9012\u5f52\u904d\u5386\u5de6\u53f3\u5b50\u6811 \u9012\u5f52\u4e09\u90e8\u66f2\n  // 1. \u786e\u5b9a\u9012\u5f52\u7684\u53c2\u6570 root.left root.right\u548c\u8fd4\u56de\u503ctrue false\n  const compareNode = function (left, right) {\n    // 2. \u786e\u5b9a\u7ec8\u6b62\u6761\u4ef6 \u7a7a\u7684\u60c5\u51b5\n    if (\n      (left === null && right !== null) ||\n      (left !== null && right === null)\n    ) {\n      return false\n    } else if (left === null && right === null) {\n      return true\n    } else if (left.val !== right.val) {\n      return false\n    }\n    // 3. \u786e\u5b9a\u5355\u5c42\u9012\u5f52\u903b\u8f91\n    let outSide = compareNode(left.left, right.right)\n    let inSide = compareNode(left.right, right.left)\n    return outSide && inSide\n  }\n  if (root === null) {\n    return true\n  }\n  return compareNode(root.left, root.right)\n}\n")),(0,l.kt)("h2",{id:"\u8fed\u4ee3"},"\u8fed\u4ee3"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u5229\u7528\u961f\u5217")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"var isSymmetric = function (root) {\n  // \u8fed\u4ee3\u65b9\u6cd5\u5224\u65ad\u662f\u5426\u662f\u5bf9\u79f0\u4e8c\u53c9\u6811\n  // \u9996\u5148\u5224\u65adroot\u662f\u5426\u4e3a\u7a7a\n  if (root === null) {\n    return true\n  }\n  let queue = []\n  queue.push(root.left)\n  queue.push(root.right)\n  while (queue.length) {\n    let leftNode = queue.shift() //\u5de6\u8282\u70b9\n    let rightNode = queue.shift() //\u53f3\u8282\u70b9\n    // \u63d0\u524d\u7ed3\u675f\n    if (leftNode === null && rightNode === null) {\n      continue\n    }\n    //\u4e2d\u6b62\u6761\u4ef6\n    if (\n      leftNode === null ||\n      rightNode === null ||\n      leftNode.val !== rightNode.val\n    ) {\n      return false\n    }\n    queue.push(leftNode.left) //\u5de6\u8282\u70b9\u5de6\u5b69\u5b50\u5165\u961f\n    queue.push(rightNode.right) //\u53f3\u8282\u70b9\u53f3\u5b69\u5b50\u5165\u961f\n    queue.push(leftNode.right) //\u5de6\u8282\u70b9\u53f3\u5b69\u5b50\u5165\u961f\n    queue.push(rightNode.left) //\u53f3\u8282\u70b9\u5de6\u5b69\u5b50\u5165\u961f\n  }\n\n  return true\n}\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u5229\u7528\u6808")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"var isSymmetric = function (root) {\n  // \u8fed\u4ee3\u65b9\u6cd5\u5224\u65ad\u662f\u5426\u662f\u5bf9\u79f0\u4e8c\u53c9\u6811\n  // \u9996\u5148\u5224\u65adroot\u662f\u5426\u4e3a\u7a7a\n  if (root === null) {\n    return true\n  }\n  let stack = []\n  stack.push(root.left)\n  stack.push(root.right)\n  while (stack.length) {\n    let rightNode = stack.pop() //\u5de6\u8282\u70b9\n    let leftNode = stack.pop() //\u53f3\u8282\u70b9\n    if (leftNode === null && rightNode === null) {\n      continue\n    }\n    if (\n      leftNode === null ||\n      rightNode === null ||\n      leftNode.val !== rightNode.val\n    ) {\n      return false\n    }\n    stack.push(leftNode.left) //\u5de6\u8282\u70b9\u5de6\u5b69\u5b50\u5165\u961f\n    stack.push(rightNode.right) //\u53f3\u8282\u70b9\u53f3\u5b69\u5b50\u5165\u961f\n    stack.push(leftNode.right) //\u5de6\u8282\u70b9\u53f3\u5b69\u5b50\u5165\u961f\n    stack.push(rightNode.left) //\u53f3\u8282\u70b9\u5de6\u5b69\u5b50\u5165\u961f\n  }\n\n  return true\n}\n")))}c.isMDXComponent=!0}}]);